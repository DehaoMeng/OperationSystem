//
// Created by 86176 on 2022/4/21 0021.
//

#include "PV.h"
#include <iostream>
#include<stdio.h>
#include<stdlib.h>
#include <string>
#include <windows.h>
using namespace std;

#define random() (rand()%2)

enum State       //???????????????
{
    running,     //????
    ready,       //????
    waiting,     //????
    done         //???
};

struct PCB
{
    string pName;       //??????
    State pState;		//??
    int pWaitFor;	    //??????
    int PC;				//????????
};

PCB p1, p2;
PCB * pro, *proc;

static char BufferPool[10];//????10??????

int s1;//?????????
int s2;//????????

int in = 0;
int out = 0;

int PC;
int PA[5];
int SA[5];

char c1,c2;

//P,V???
int P(int s){
    s--;
    if (s < 0){
        pro->pState = waiting;
        pro->pWaitFor = s;	//????????s
    }
    else
        pro->pState = ready;
    return s;
}
int V(int s){
    s++;
    if (s <= 0){
        proc->pState = ready;
        proc->pWaitFor = s;	//????????s
    }
    pro->pState = ready;
    return s;
}

//?????????
void Put(char c){
    // ?????????????????
    BufferPool[in] = c;
    in = (in + 1) % 10;
}

char Get() {
    // ??????????????????????
    char c = BufferPool[out];
    out = (out + 1) % 10;
    return c;
}

char produce(){
    // ?????????????
    char s;
    cout << "????????????????????:" << endl;
    cin >> s;
    return s;
}
void consume(char c){
    // ????????????
    cout << "???????????:"<<c << endl;
}
void GOTO(int L){
    // ???PC?????
    pro->PC = L;
}
void NOP(){
    // ?????
}


//?????????
void init(){
    s1 = 10;	//??????????????10
    s2 = 0;		//?????????????0
    p1 = {"Product",ready,s1,0};//?????????
    p2 = {"Consumer",ready,s2,0};//?????????
    p1.pState = running;
    pro = &p1;
    proc = &p2;
    //????????????????????
    for (int i = 0; i < 5; i++){
        PA[i] = i;
    }
    //????????????????????
    for (int i = 0; i < 5; i++){
        SA[i] = i;
    }
    schedule();
}

//?????????????
void schedule(){
    if (pro->pState == running){    // ????????????????????????
        pro->pState = ready;
    }
    if (p1.pState == ready || p2.pState == ready){  //???????????????????
        if (random() == 0)  // ?????????2????? ?????????????????1 ???????????????2 ??????
        {
            pro = &p1;
            proc = &p2;
        }
        else
        {
            pro = &p2;
            proc = &p1;
        }
        if (pro->pState == ready)    // ????????????????? ???????????????????????????
        {
            PC = pro->PC;
            pro->pState = running;
            pcDoing();
        }
    }

}

//???????????????
void pcDoing(){
    int i = pro->PC; // ???????????????????
    showPCB(i);         // ????????????
    // ????????????????????????????????????????
    if (p1.pState == running){
        int j = PA[i];      // ?????????????
        switch (j)
        {
            case 0:c1 = produce(); pro->PC++; break;
            case 1:s1 = P(s1); pro->PC++; break;
            case 2:Put(c1); pro->PC++; break;
            case 3:s2 = V(s2); pro->PC++; break;
            case 4:GOTO(0); break;
            default:
                break;
        }
    }
    if (p2.pState == running){
        int j = SA[i];
        switch (j)
        {
            case 0:s2 = P(s2); pro->PC++; break;
            case 1:c2 = Get(); pro->PC++; break;
            case 2:s1 = V(s1); pro->PC++; break;
            case 3:consume(c2); pro->PC++; break;
            case 4:GOTO(0); break;
            default:
                break;
        }
    }
}

//???????
void showPCB(int i){
    cout << "---?????????????" << pro->pName << "??" << i+1 << "??" << "---------" << endl;
    Sleep(1000);
}

// ?????????????? ??????????????
int main(){
    init();// ?????????
    while (true)
        schedule();// ?????????????
    return 0;
}